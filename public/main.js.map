{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/client-analysits/client-analysits.component.css","webpack:///./src/app/components/client-analysits/client-analysits.component.html","webpack:///./src/app/components/client-analysits/client-analysits.component.ts","webpack:///./src/app/components/client-prom/client-prom.component.css","webpack:///./src/app/components/client-prom/client-prom.component.html","webpack:///./src/app/components/client-prom/client-prom.component.ts","webpack:///./src/app/components/client/client.component.css","webpack:///./src/app/components/client/client.component.html","webpack:///./src/app/components/client/client.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/services/client.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClientComponent } from './components/client/client.component';\nimport { ClientAnalysitsComponent } from './components/client-analysits/client-analysits.component';\n\nconst routes: Routes = [\n  {path: '', component:ClientComponent},\n  {path: 'analysits', component:ClientAnalysitsComponent}, \n  //{path: 'error', component: ''},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app-client-intercorp-retail';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireModule } from 'angularfire2';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ClientComponent } from './components/client/client.component';\nimport { ClientAnalysitsComponent } from './components/client-analysits/client-analysits.component';\n\nimport { ClientService } from './services/client.service';\nimport { ClientPromComponent } from './components/client-prom/client-prom.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ClientComponent,\n    ClientAnalysitsComponent,\n    ClientPromComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig,'app-client-intercorp'),\n    AngularFirestoreModule,\n    FormsModule\n  ],\n  providers: [ClientService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-content\\\">\\n      <span class=\\\"card-title\\\"><strong>Búsqueda de clientes</strong></span>\\n      <form class=\\\"col s6\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"input-field col s6\\\">\\n            <input type=\\\"text\\\" name=\\\"apellido\\\" id=\\\"apellido\\\" placeholder=\\\"Apellido\\\" (input)=\\\"filterByLastname($event.target.value)\\\">\\n            <label> Apellido </label>\\n          </div>\\n        </div>\\n      </form>\\n      <div> (*) No necesitas un boton buscar, es automatico</div>\\n    </div>\\n</div>\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-content\\\">\\n    <strong class=\\\"card-title\\\">Lista de clientes</strong>\\n    <table>\\n        <thead>\\n          <tr>\\n              <th>Nombre</th>\\n              <th>Apellido</th>\\n              <th>Edad</th>\\n              <th>Fecha Nac</th>\\n              <th>Edad Muerte</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody>\\n          <tr *ngFor= \\\"let cliente of clientList\\\">\\n            <td>{{ cliente.nombre }}</td>\\n            <td>{{ cliente.apellido }}</td>\\n            <td>{{ cliente.edad }}</td>\\n            <td>{{ cliente.fecha_nac }}</td>\\n            <td>{{ cliente.edadMuerte }}</td> \\n          </tr>\\n        </tbody>\\n      </table>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ClientInterface } from '../../models/clientInterface';\nimport { ClientService } from '../../services/client.service';\nimport { NgForm } from '@angular/forms/src/directives/ng_form';\n\n@Component({\n  selector: 'app-client-analysits',\n  templateUrl: './client-analysits.component.html',\n  styleUrls: ['./client-analysits.component.css']\n})\nexport class ClientAnalysitsComponent implements OnInit {\n\n  client: ClientInterface = {\n    nombre: '',\n    apellido: '',\n    edad: 0,\n    fecha_nac: ''\n  }\n\n  clientList: ClientInterface[];\n\n  constructor(private clientService: ClientService) { }\n\n  ngOnInit() {}\n\n  filterByLastname(value){\n    this.clientService.getClientesByLastname(value).subscribe( clientes => {\n\n      clientes.forEach((item,index) => {\n        item.edadMuerte = Math.floor(Math.random() * (100 - item.edad)) + item.edad;\n      });\n      this.clientList = clientes;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  client-prom works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-client-prom',\n  templateUrl: './client-prom.component.html',\n  styleUrls: ['./client-prom.component.css']\n})\nexport class ClientPromComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-content\\\">\\n    <span class=\\\"card-title\\\"><strong>Creación de clientes</strong></span>\\n    <form (ngSubmit)=\\\"onGuardarCliente(formNew)\\\" #formNew=\\\"ngForm\\\" class=\\\"col s6\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"input-field col s6\\\">\\n          <input [(ngModel)]=\\\"client.nombre\\\" #nombre=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"nombre\\\" id=\\\"nombre\\\" placeholder=\\\"Nombre\\\">\\n          <label> Nombre </label>\\n        </div>\\n        <div class=\\\"input-field col s6\\\">\\n          <input [(ngModel)]=\\\"client.apellido\\\" #apellido=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"apellido\\\" id=\\\"apellido\\\" placeholder=\\\"Apellido\\\">\\n          <label> Apellido </label>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"input-field col s6\\\">\\n          <input [(ngModel)]=\\\"client.edad\\\" #edad=\\\"ngModel\\\" type=\\\"number\\\" name=\\\"edad\\\" id=\\\"edad\\\" placeholder=\\\"Edad\\\">\\n          <label> Edad </label>\\n        </div>\\n        <div class=\\\"input-field col s6\\\">\\n          <input [(ngModel)]=\\\"client.fecha_nac\\\" #fecha_nac=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"fecha_nac\\\" id=\\\"fecha_nac\\\" placeholder=\\\"Fecha de Nacimiento\\\">\\n          <label> Fecha Nac. </label>\\n        </div>\\n        <button class=\\\"btn waves-effect waves-light right blue\\\" type=\\\"submit\\\" name=\\\"action\\\">Guardar\\n            <i class=\\\"material-icons right\\\">send</i>\\n        </button>\\n        <br>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-container\\\">\\n      <div class=\\\"row\\\">\\n          <ul class=\\\"collection\\\">\\n            <li class=\\\"collection-item\\\">\\n              <strong>Estadísticas de clientes</strong>\\n              <br>\\n                <blockquote>Promedio de edad</blockquote>\\n                <div class=\\\"container center\\\">\\n                  <strong>{{ promedio }}</strong>\\n                </div>\\n              <br>\\n                <blockquote>Desviación estándar</blockquote>\\n                <div class=\\\"container center\\\">\\n                  <strong>{{ std }}</strong>\\n                </div>\\n              <br>\\n            </li>\\n          </ul>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ClientInterface } from '../../models/clientInterface';\nimport { ClientService } from '../../services/client.service';\nimport { NgForm } from '@angular/forms/src/directives/ng_form';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css']\n})\nexport class ClientComponent implements OnInit {\n\n  client: ClientInterface = {\n    nombre: '',\n    apellido: '',\n    edad: 0,\n    fecha_nac: ''\n  }\n\n  public promedio : number;\n  public std : number;\n\n  constructor(private clientService: ClientService) { }\n\n  ngOnInit() {\n    this.calculate();\n  }\n\n  calculate() {\n    let ages = [];\n    this.clientService.getClientes().subscribe( clientes => {\n      clientes.forEach((item,index) => {\n        ages.push(item.edad);\n      });\n      this.promedio = Math.round((ages.reduce((a,b) => a + b ))/ages.length); \n      this.std = Math.round(this.standardDeviation(ages,true));\n    });\n  }\n\n  standardDeviation = (arr, usePopulation = false) => {\n    const mean = arr.reduce((acc, val) => acc + val, 0) / arr.length;\n    return Math.sqrt(\n      arr.reduce((acc, val) => acc.concat((val - mean) ** 2), []).reduce((acc, val) => acc + val, 0) /\n        (arr.length - (usePopulation ? 0 : 1))\n    );\n  };\n  \n  onGuardarCliente(myForm: NgForm) {\n    this.clientService.addCliente(this.client);\n    this.calculate();\n    this.resetform();\n  }\n\n  resetform() {\n    this.client.edad = 0;\n    this.client.nombre = '';\n    this.client.apellido = '';\n    this.client.fecha_nac = '';\n    this.client.edadMuerte = 0;\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"fix-color\\\">\\n    <div class=\\\"nav-wrapper\\\">\\n      <a href=\\\"#\\\" class=\\\"brand-logo center\\\"><img src=\\\"../../../assets/img/logo.png\\\" width=\\\"200\\\" height=\\\"80\\\"></a>\\n      <ul id=\\\"nav-mobile\\\" class=\\\"right hide-on-med-and-down\\\">\\n        <li><a [routerLink]=\\\"['analysits']\\\" class=\\\"item-link\\\">Análisis</a></li>\\n      </ul>\\n    </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore,AngularFirestoreCollection,AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { ClientInterface } from '../models/clientInterface';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  clientsCollection: AngularFirestoreCollection<ClientInterface>;\n  clientsCollectionFilter: AngularFirestoreCollection<ClientInterface>;\n  clients: Observable<ClientInterface[]>;\n  clientsFilter: Observable<ClientInterface[]>;\n  clientDoc: AngularFirestoreDocument<ClientInterface>;\n\n  constructor(public afs: AngularFirestore) { \n    //this.clients = afs.collection('client').valueChanges();\n    this.clientsCollection = afs.collection<ClientInterface>('client');\n  }\n\n  getClientes() {\n    this.clients = this.clientsCollection.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as ClientInterface;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    );\n    return this.clients;\n  }\n\n  getClientesByLastname(lastname: string) {\n    this.clientsCollectionFilter = this.afs.collection<ClientInterface>('client', ref => ref.where('apellido', '==', lastname));\n    this.clientsFilter = this.clientsCollectionFilter.valueChanges();\n    return this.clientsFilter;\n  }\n\n  addCliente(cliente: ClientInterface) {\n    this.clientsCollection.add(cliente);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyA2v1779JAOGXeZYN0JvXTwz1yHXUysqzs\",\n    authDomain: \"prueba-3808a.firebaseapp.com\",\n    databaseURL: \"https://prueba-3808a.firebaseio.com\",\n    projectId: \"prueba-3808a\",\n    storageBucket: \"\",\n    messagingSenderId: \"732323257809\",\n    appId: \"1:732323257809:web:4d176e039bdf9014\"\n  }\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}